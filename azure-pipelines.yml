trigger: none

variables:
  - group: "Terraform Outputs"

pool: "self-hosted-pool"

stages:
  - stage: DeployIngress
    jobs:
      - job:
        steps:
          - template: add-tool-installer-task.yml

          - script: |
              helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
              helm repo update
            displayName: Add Ingress NGINX Repo

          - task: HelmDeploy@1
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceConnection: "aks"
              command: "upgrade"
              chartName: "ingress-nginx/ingress-nginx"
              releaseName: "aks-ingress-nginx"
              install: true
              namespace: "ingress-basic"

  - stage: DeployApps
    dependsOn: DeployIngress
    jobs:
      - job:
        steps:
          - template: add-tool-installer-task.yml

          - script: |
              helm repo add bitnami https://charts.bitnami.com/bitnami
              helm repo add examples https://helm.github.io/examples
              helm repo add salaboy https://salaboy.github.io/helm/
              helm repo update
            displayName: Add bitnami Repo

          - task: HelmDeploy@1
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceConnection: "aks"
              command: "upgrade"
              chartName: "examples/hello-world"
              releaseName: "app1"
              install: true
              arguments: "--set fullnameOverride=app1"

          - task: HelmDeploy@1
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceConnection: "aks"
              command: "upgrade"
              chartName: "salaboy/helm-chart-example"
              releaseName: "app2"
              install: true

  - stage: ConfigureIngress
    dependsOn: DeployApps
    jobs:
      - job:
        steps:
          - template: add-tool-installer-task.yml

          - task: Kubernetes@1
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceEndpoint: "aks"
              command: "apply"
              arguments: "-f kubernetes/ingress.yml"
